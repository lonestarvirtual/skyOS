# name: Publish to Registry

#on:
#  release:
#    types: [published]

# on: [push]

# jobs:
#   publish:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Get release version
#         id: get_version
#         run: echo ::set-env name=RELEASE_VERSION::$(echo ${GITHUB_REF:10})

#       - name: Publish to GitHub Registry
#         uses: elgohr/Publish-Docker-Github-Action@master
#         with:
#           name: lonestarvirtual/skyos/skyos
#           username: ${{ github.actor }}
#           password: ${{ secrets.GITHUB_TOKEN }}
#           registry: docker.pkg.github.com
#           tags: "latest,${{ env.RELEASE_VERSION }}"

name: Publish to Registry

on:
  push:

jobs:
  push:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker-compose build

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME
          
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag image $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
